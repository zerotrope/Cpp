Changes
	- panda.cpp 32 & 38: guerrier::setDefending(inverse)

To do
	- analyse/prise de decision (focus race par exemple) dans team
	- team::analyse() = *reflexion* pointeur guerrier d'en face, choix architectural sur pointeur = NULL si mort ou pas?
	- kill guerrier a la fin du jeu pas avant (perenite pointeurs, cycles vie/mort/posture...)
	- team::debriefing() : quand plus de guerriers, division par 0 ("nans") solution: ne pas afficher la ligne lorsque pas de guerrier initial?
	- Point references
	- fichier sortie cerr ?
	- commandes Makefile verbeux/muet?

Done
	- DEBUG team::debriefing()
	- team::analyse() : definir posture (defense y/n)
	- team::analyse() : definir target

Notes
	- guerrier et plus generalement toutes les classes mod�les ne doivent pas faire de cout
	- Routine ajout nouvel attribut au sein d'une classe en cours de route
		- Get
		- Set
		- Initialisation constructeurs
	- Mot cle : singleton
	- !!!!! * !!!!! : pas d'accessibilite sur 3 niveaux de l'it�rateur (target.getListe().end())
	- team::attaquer(): if(attaque spe) elseif(isDefending()?) else(attaquer())

 NEXT
  - Templates
  - Surcharge operateurs
  - point references
  - alleger/retirer les lignes de DEBUG
  - alternative : cerr !
  - Singleton
  - Design pattern (factory)

 Architecture
  - definition de la mort dans attaque() par des setVie()
  - methode guerrier::mourir?
  - methode guerrier::encaisser?
  - methode guerrier::recussiter? -> flag "mort" mais pas de destruction

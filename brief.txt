To do
  - exercise surcharge & design pattern (other examples of existing desing patterns like singleton?)
	- Find a example of "Design pattern factory?" own example from literature
	- team::analyse() : operator overloading examples of applications

Notes
	- "model" classes shoudnt cout
	- New attribute routine process
		- Get function
		- Set function
		- Initialisations in constructors
	- design patterns are existing code architecture with specific design/rules ie. singleton
	- team::analyse() = *reflexion* pointeur guerrier d'en face, choix architectural sur pointeur = NULL si mort ou pas?
	- analyse/prise de decision (focus race par exemple) dans team
	- kill guerrier a la fin du jeu pas avant (perenite pointeurs, cycles vie/mort/posture...)
	- team::debriefing() : quand plus de guerriers, division par 0 ("nans") solution: ne pas afficher la ligne lorsque pas de guerrier initial?
	- Point references
	- fichier sortie cerr ?
	- commandes Makefile verbeux/muet?

 NEXT
  - Templates
  - Surcharge operateurs
  - point references
  - alleger/retirer les lignes de DEBUG
  - alternative : cerr !
  - Singleton
  - Design pattern (factory)

 Architecture
  - definition de la mort dans attaque() par des setVie()
  - methode guerrier::mourir?
  - methode guerrier::encaisser?
  - methode guerrier::recussiter? -> flag "mort" mais pas de destruction
